/* Theme Variables */
:root {
  --bg-primary: #f4f7f6; /* Main background */
  --bg-secondary: #ffffff; /* Panel, Modal backgrounds */
  --bg-secondary-translucent: rgba(255, 255, 255, 0.95); /* Toolbar, Controls background */
  --bg-tertiary: #eee; /* Button backgrounds */
  --bg-canvas: #e9ecef; /* Editor area background */
  --bg-node: #ffffff; /* Node background */
  --bg-input: #ffffff; /* Input/Select background */
  --bg-hover: #f0f0f0; /* Hover background */
  --bg-active: #e0e0e0; /* Active background */
  --bg-button: #f8f8f8; /* Specific button background (controls) */
  --text-primary: #333; /* Primary text */
  --text-secondary: #555; /* Secondary text, icons */
  --text-tertiary: #888; /* Tertiary text (e.g., close button, version) */
  --text-button: #444; /* Toolbar button text */
  --text-inverted: #ffffff; /* Text on dark backgrounds (if any in light mode) */
  --text-placeholder: #aaa;
  --border-color: #ccc; /* Input borders */
  --border-color-light: #eee; /* Separator lines */
  --border-color-medium: #ddd; /* Node borders */
  --accent-color: #4285F4; /* Highlight color (e.g., selected node, focus) */
  --accent-focus-shadow: rgba(66, 133, 244, 0.2); /* Focus ring shadow */
  --shadow-color: rgba(0, 0, 0, 0.15); /* Main shadow */
  --shadow-light: rgba(0, 0, 0, 0.1); /* Lighter shadow */
  --shadow-node: rgba(0, 0, 0, 0.08); /* Node shadow */
  --overlay-bg: rgba(0, 0, 0, 0.5); /* Modal overlay */
  --scrollbar-thumb: #c1c1c1;
  --scrollbar-track: var(--bg-primary);
}

body[data-theme="dark"] {
  --bg-primary: #1a1a1a;
  --bg-secondary: #2a2a2a;
  --bg-secondary-translucent: rgba(42, 42, 42, 0.95);
  --bg-tertiary: #3a3a3a;
  --bg-canvas: #202020;
  --bg-node: #303030;
  --bg-input: #3a3a3a;
  --bg-hover: #4a4a4a;
  --bg-active: #5a5a5a;
  --bg-button: #333;
  --text-primary: #e0e0e0;
  --text-secondary: #b0b0b0;
  --text-tertiary: #888;
  --text-button: #c0c0c0;
  --text-inverted: #1a1a1a;
  --text-placeholder: #666;
  --border-color: #555;
  --border-color-light: #444;
  --border-color-medium: #666;
  --accent-color: #5c9dff;
  --accent-focus-shadow: rgba(92, 157, 255, 0.3);
  --shadow-color: rgba(0, 0, 0, 0.5);
  --shadow-light: rgba(0, 0, 0, 0.4);
  --shadow-node: rgba(0, 0, 0, 0.3);
  --overlay-bg: rgba(0, 0, 0, 0.7);
  --scrollbar-thumb: #555;
  --scrollbar-track: var(--bg-primary);
}

/* Global Resets and Base Styles */
body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,
    Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background-color: var(--bg-primary);
  color: var(--text-primary);
  transition: background-color 0.3s ease, color 0.3s ease;
  height: 100vh;
  width: 100vw;
  overflow: hidden;
}

#root {
  height: 100%;
  width: 100%;
}

/* Main App Layout */
.app-container {
  height: 100vh;
  width: 100%;
  position: relative;
  overflow: hidden;
}

/* Layer Panel Styles - Absolute Positioning */
.layer-panel {
  position: absolute;
  top: 0;
  bottom: 0;
  width: 250px;
  left: -250px;
  background-color: var(--bg-secondary);
  border-right: 1px solid var(--border-color-light);
  overflow: hidden;
  /* Define base transition (for sliding out/left) */
  transition: left 0.3s linear;
  box-sizing: border-box;
  display: flex;
  flex-direction: column;
  height: 100%;
  padding: 0;
  z-index: 15;
  box-shadow: 2px 0 8px var(--shadow-light);
}

.layer-panel.visible {
  left: 0;
  /* Override transition specifically for sliding in/right */
  transition: left 0.2s ease-out; /* Faster slide-in */
}

.layer-panel h3 {
  padding: 10px 15px;
  margin: 0;
  border-bottom: 1px solid var(--border-color-light);
  font-size: 0.9rem;
  font-weight: 600;
  color: var(--text-secondary);
  flex-shrink: 0;
  box-sizing: border-box;
}

/* Style for the react-arborist tree container */
.layer-panel > div[role="tree"] {
  flex-grow: 1;
  overflow-y: auto;
  overflow-x: hidden;
  width: 100% !important;
  height: auto !important;
  padding: 5px;
  box-sizing: border-box;
}

/* Styles for react-arborist nodes */
.react-arborist-node {
  cursor: pointer;
  padding: 4px 8px;
  border-radius: 4px;
  margin-bottom: 2px;
  font-size: 0.9em;
  color: var(--text-secondary);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.react-arborist-node:hover {
  background-color: var(--bg-hover);
  color: var(--text-primary);
}

.react-arborist-node-selected > div > div {
  background-color: var(--accent-color) !important;
  color: var(--text-inverted) !important;
  border-radius: 4px;
}
.react-arborist-node-selected:hover > div > div {
   background-color: var(--accent-color) !important;
}


.react-arborist-node-focused > div > div {
  outline: 1px dashed var(--accent-color);
  outline-offset: -2px;
}

/* Ensure the drop cursor is visible */
.react-arborist-drop-cursor {
    background-color: var(--accent-color);
    height: 2px;
}

/* Style for react-arborist indentation guides */
.react-arborist-node-container {
    position: relative;
}

/* Style the pseudo-element as the guide line */
.react-arborist-node-container > div[role="treeitem"]::before {
    content: '';
    position: absolute;
    left: 12px;
    top: -15px;
    bottom: 0;
    width: 1px;
    background-color: var(--border-color-light);
    z-index: -1;
}

/* Hide the guide line for the top-level nodes */
.layer-panel > div[role="tree"] > div > .react-arborist-node-container > div[role="treeitem"]::before {
    display: none;
}

/* Adjust line height/position if needed */
.react-arborist-node-container > div[role="treeitem"] {
    position: relative;
}

/* Floating Toolbar Styles - Horizontal */
.toolbar-container {
  position: absolute;
  top: 15px;
  left: 50%;
  transform: translateX(-50%);
  background-color: var(--bg-secondary-translucent);
  border-radius: 8px;
  padding: 5px 10px;
  box-sizing: border-box;
  box-shadow: 0 4px 12px var(--shadow-color);
  z-index: 20;
  display: flex;
  flex-direction: row;
  align-items: center;
  transition: transform 0.3s ease-in-out, opacity 0.3s ease-in-out, padding 0.3s ease-in-out;
  height: auto;
  gap: 5px;
}

.toolbar-container.collapsed {
  padding: 5px;
}

.toolbar-container.collapsed .toolbar-button span {
  display: none;
}

.toolbar-container.collapsed .toolbar-button {
  min-width: auto;
  padding: 8px;
}

.toolbar-container.collapsed .toolbar-icon {
  margin-bottom: 0;
}

.toolbar-container .toolbar-menu {
   margin: 0;
   display: flex;
   flex-direction: row;
   align-items: center;
}

.toolbar-container .toolbar-menu li {
    border-bottom: none;
    padding-bottom: 0;
    margin-bottom: 0;
    margin-right: 5px;
}

/* Toggle Button Styles - Restored and Adjusted */
.toolbar-toggle-button {
  background: var(--bg-tertiary);
  border: none;
  border-radius: 6px;
  padding: 8px 10px;
  cursor: pointer;
  font-size: 1.1em;
  line-height: 1;
  color: var(--text-secondary);
  transition: background-color 0.2s ease;
  flex-shrink: 0;
}

.toolbar-toggle-button:hover {
  background: var(--bg-hover);
}

.editor-area-container {
  width: 100%;
  height: 100%;
  background-color: var(--bg-canvas);
  position: relative;
  overflow: hidden;
}

.properties-panel-container {
  position: absolute;
  top: 0;
  bottom: 0;
  width: 280px;
  right: -280px;
  background-color: var(--bg-secondary);
  padding: 20px;
  box-sizing: border-box;
  overflow-y: auto;
  box-shadow: -3px 0 8px var(--shadow-light);
  transition: right 0.3s ease-in-out;
  z-index: 10;
}

.properties-panel-container.visible {
  right: 0;
}

.toolbar-title {
 display: none;
}

.toolbar-menu {
  list-style: none;
  padding: 0;
  margin: 0;
  display: flex;
  flex-direction: row;
}

.toolbar-menu li {
  border-bottom: none;
  padding-bottom: 0;
  margin-bottom: 0;
  margin-right: 5px;
}

.toolbar-menu li:last-child {
  margin-right: 0;
}

.toolbar-button {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: auto;
  min-width: 60px;
  padding: 8px 5px;
  background-color: transparent;
  border: 1px solid transparent;
  border-radius: 6px;
  cursor: pointer;
  text-align: center;
  font-size: 0.85em;
  color: var(--text-button);
  transition: background-color 0.2s ease, color 0.2s ease;
}

.toolbar-button:hover {
  background-color: var(--bg-hover);
  color: var(--text-primary);
}

.toolbar-button:active {
  background-color: var(--bg-active);
  transform: scale(0.98);
  transition: background-color 0.05s ease, transform 0.05s ease;
}

.toolbar-button svg {
  width: 18px;
  height: 18px;
  fill: currentColor;
}

.toolbar-icon {
  margin-right: 0;
  margin-bottom: 4px;
  width: 18px;
  height: 18px;
  color: inherit;
}

.toolbar-button span {
  display: block;
  width: 100%;
  text-align: center;
}

/* Properties Panel Styles */
.properties-panel-title {
  font-size: 1.1em;
  font-weight: 600;
  color: var(--text-primary);
  margin-bottom: 20px;
  padding-bottom: 10px;
  border-bottom: 1px solid var(--border-color-light);
}

.property-group {
  margin-bottom: 20px;
}

.property-group label {
  display: block;
  font-size: 0.9em;
  color: var(--text-secondary);
  margin-bottom: 6px;
}

.property-group input[type="text"],
.property-group input[type="color"],
.property-group input[type="number"], /* Added number type */
.property-group select,
.property-group textarea {
  width: calc(100% - 16px);
  padding: 8px;
  border: 1px solid var(--border-color);
  background-color: var(--bg-input);
  color: var(--text-primary);
  border-radius: 4px;
  font-size: 0.9em;
  box-sizing: border-box;
}
/* Style number inputs specifically if needed */
.property-group input[type="number"] {
    width: 60px; /* Example smaller width */
    margin-right: 5px;
}


.property-group textarea {
    min-height: 80px;
    resize: vertical;
}

/* React Flow Styles */
.react-flow__node-default {
  border: 1px solid var(--border-color-medium);
  padding: 15px;
  border-radius: 5px;
  background: var(--bg-node);
  color: var(--text-primary);
  width: 180px;
  min-height: 100px;
  font-size: 12px;
  text-align: center;
  box-shadow: 0 2px 4px var(--shadow-node);
}

/* Remove CSS rule for selected node, handle styling inside the component */
/* .react-flow__node-slideNode.selected { ... } */

.react-flow__handle {
    opacity: 0.6;
}

.react-flow__minimap {
    transition: right 0.3s ease-in-out !important;
}

.react-flow__minimap.minimap-offset {
  right: 300px !important;
}

.react-flow__controls {
  padding: 6px !important;
  border-radius: 16px !important;
  background-color: var(--bg-secondary-translucent) !important;
  box-shadow: 0 4px 12px var(--shadow-color) !important;
  bottom: 25px !important;
  display: flex !important;
  align-items: center !important;
}

.react-flow__controls button,
.react-flow__controls .react-flow__controls-button {
  width: 30px !important;
  height: 30px !important;
  margin: 0 6px !important;
  border-radius: 12px !important;
  border: none !important;
  background-color: var(--bg-button) !important;
  color: var(--text-secondary) !important;
  box-shadow: 0 1px 3px var(--shadow-light) !important;
  transition: background-color 0.2s ease, transform 0.1s ease !important;
}

.react-flow__controls button:hover,
.react-flow__controls .react-flow__controls-button:hover {
  background-color: var(--bg-hover) !important;
}

.react-flow__controls button:active,
.react-flow__controls .react-flow__controls-button:active {
  background-color: var(--bg-active) !important;
  transform: scale(0.95) !important;
}

.react-flow__controls button:disabled,
.react-flow__controls .react-flow__controls-button:disabled {
  opacity: 0.5 !important;
  cursor: not-allowed !important;
  background-color: var(--bg-button) !important;
  box-shadow: none !important;
  transform: none !important;
}

.react-flow__controls button svg,
.react-flow__controls .react-flow__controls-button svg {
    max-width: 14px !important;
    max-height: 14px !important;
}

/* Settings Button Styles */
.settings-button {
  position: absolute;
  bottom: 25px;
  left: 20px;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  background-color: var(--bg-button);
  border: none;
  box-shadow: 0 1px 3px var(--shadow-light) !important;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  z-index: 20;
  /* Define base transition (for sliding left/exit) */
  transition: transform 0.2s ease, background-color 0.2s ease, left 0.3s linear;
  color: var(--text-secondary);
}

/* Shift settings button when layer panel is visible */
.settings-button.shifted {
  left: 270px; /* Original left (20px) + Layer panel width (250px) */
  /* Override transition specifically for sliding right/enter */
  transition: transform 0.2s ease, background-color 0.2s ease, left 0.2s ease-out; /* Faster slide-in */
  /* The base transition (left 0.3s linear) will apply when this class is removed */
}

.settings-button:hover {
  background-color: var(--bg-hover) !important;
}

.settings-button:active {
   transform: scale(0.9);
   background-color: var(--bg-active) !important;
}

.settings-button svg {
  width: 20px;
  height: 20px;
}

/* Spinning animation */
@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

.settings-button.spin svg {
  animation: spin 0.5s linear;
}


/* Settings Modal Styles */
.settings-modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--overlay-bg);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.3s ease, visibility 0s linear 0.3s;
}

.settings-modal-overlay.open {
    opacity: 1;
    visibility: visible;
    transition: opacity 0.3s ease, visibility 0s linear 0s;
}


.settings-modal-content {
  background-color: var(--bg-secondary);
  padding: 25px 30px;
  border-radius: 12px;
  box-shadow: 0 5px 15px var(--shadow-color);
  min-width: 400px;
  max-width: 600px;
  z-index: 1001;
  transform: scale(0.9);
  opacity: 0;
  transition: transform 0.3s ease, opacity 0.3s ease;
}

.settings-modal-overlay.open .settings-modal-content {
    transform: scale(1);
    opacity: 1;
}


.settings-modal-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  border-bottom: 1px solid var(--border-color-light);
  padding-bottom: 15px;
  margin-bottom: 20px;
}

.settings-modal-header h3 {
  margin: 0;
  font-size: 1.4em;
  color: var(--text-primary);
}

.settings-modal-close-btn {
  background: none;
  border: none;
  font-size: 1.5em;
  cursor: pointer;
  color: var(--text-tertiary);
  padding: 0;
  line-height: 1;
}
.settings-modal-close-btn:hover {
    color: var(--text-primary);
}

.settings-modal-body {
  min-height: 150px;
}

/* Styles for Settings Modal Content */
.setting-group {
  margin-bottom: 25px;
}

.setting-group:last-child {
  margin-bottom: 0;
}

.setting-group h4 {
  margin-top: 0;
  margin-bottom: 10px;
  font-size: 1.1em;
  color: var(--text-secondary);
  font-weight: 600;
}

.setting-options-radio label {
  display: inline-block;
  margin-right: 20px;
  cursor: pointer;
  font-size: 0.95em;
  color: var(--text-primary);
}

.setting-options-radio label:last-child {
  margin-right: 0;
}

.setting-options-radio input[type="radio"] {
  margin-right: 6px;
  vertical-align: middle;
}

.setting-select {
  width: 100%;
  padding: 10px 12px;
  border: 1px solid var(--border-color);
  border-radius: 6px;
  font-size: 0.95em;
  background-color: var(--bg-input);
  color: var(--text-primary);
  box-sizing: border-box;
  cursor: pointer;
}

.setting-select:focus {
  outline: none;
  border-color: var(--accent-color);
  box-shadow: 0 0 0 2px var(--accent-focus-shadow);
}

.version-info {
  margin-top: 30px;
  padding-top: 15px;
  border-top: 1px solid var(--border-color-light);
  text-align: right;
  font-size: 0.85em;
  color: var(--text-tertiary);
}

.version-info p {
    margin: 0;
}

/* Custom Styles for react-resizable Handles - Smaller Circles, Higher Z-Index */
.react-resizable-handle {
    position: absolute;
    width: 8px;
    height: 8px;
    background-color: var(--accent-color);
    border: 1px solid white;
    border-radius: 50%;
    box-shadow: 0 1px 2px rgba(0,0,0,0.4);
    z-index: 20; /* Increase z-index */
    opacity: 0.8;
    transition: opacity 0.2s ease;
}

.react-resizable-handle:hover {
    opacity: 1;
}

/* Position handles slightly outside the element */
.react-resizable-handle-se {
  bottom: -4px; /* Half the handle size */
  right: -4px;
  cursor: se-resize;
}
.react-resizable-handle-sw {
  bottom: -4px;
  left: -4px;
  cursor: sw-resize;
}
.react-resizable-handle-ne {
  top: -4px;
  right: -4px;
  cursor: ne-resize;
}
.react-resizable-handle-nw {
  top: -4px;
  left: -4px;
  cursor: nw-resize;
}
.react-resizable-handle-e {
  top: 50%;
  margin-top: -4px; /* Center vertically */
  right: -4px;
  cursor: ew-resize;
}
.react-resizable-handle-w {
  top: 50%;
  margin-top: -4px;
  left: -4px;
  cursor: ew-resize;
}
.react-resizable-handle-n {
  left: 50%;
  margin-left: -4px; /* Center horizontally */
  top: -4px;
  cursor: ns-resize;
}
.react-resizable-handle-s {
  left: 50%;
  margin-left: -4px;
  bottom: -4px;
  cursor: ns-resize;
}
